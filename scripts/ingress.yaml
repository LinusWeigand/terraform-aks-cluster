# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress
#   annotations:
#     kubernetes.io/ingress.class: azure/application-gateway
# spec:
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: create-react-app-service
#                 port: 
#                   number: 3000

# ----------------------------------------------------------------

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: example-ingress
#   annotations:
#     kubernetes.io/ingress.class: traefik
#     cert-manager.io/issuer: "letsencrypt-staging"
# spec:
#   tls:
#   - hosts:
#     - aks.linusweigand.com
#     secretName: aks-linusweigand-tls
#   rules:
#   - host: aks.linusweigand.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: example-service
#             port:
#               name: http

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-staging
    kubernetes.io/ingress.class: azure/application-gateway
  name: ingress
  namespace: default
spec:
  rules:
  - host: example.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: myservice
            port:
              number: 80
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
  - hosts:
    - example.com
    secretName: myingress-cert # < cert-manager will store the created certificate in this secret.
